/** This css file was autogenerated from Switch.module.css **/
.fds-switch-switch {
  --fds-inner-focus-border-color: var(--fds-semantic-border-focus-boxshadow);
  --fds-outer-focus-border-color: var(--fds-semantic-border-focus-outline);
  --fds-focus-border-width: 3px;
  --fds-transition: 200ms;

  min-width: 44px;
  min-height: 44px;
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    'input label'
    '. description';
  gap: 0 var(--fds-spacing-2);
  grid-auto-flow: column;
}

.fds-switch-switch.fds-switch-noLabel {
  gap: 0;
}

@media (prefers-reduced-motion) {
  .fds-switch-switch {
    --fds-transition: 0;
  }
}

.fds-switch-right {
  grid-template-columns: 1fr auto;
  grid-template-rows: 1fr auto;
  grid-template-areas:
    'label input'
    'description .';
}

.fds-switch-icon {
  grid-area: input;
  pointer-events: none;
  height: 1.75em;
  width: auto;
  margin: auto;
  overflow: visible;
  border-radius: 16px;
}

.fds-switch-label {
  grid-area: label;
  min-height: 44px;
  min-width: min-content;
  display: inline-flex;
  flex-direction: row;
  gap: var(--fds-spacing-1);
  align-items: center;
  cursor: pointer;
}

.fds-switch-description {
  grid-area: description;
  padding-left: 3px;
  margin-top: calc(var(--fds-spacing-2) * -1);
  color: var(--fds-semantic-text-neutral-subtle);
}

.fds-switch-input {
  min-width: 44px;
  width: 100%;
  min-height: 44px;
  opacity: 0;
  margin: 0;
  grid-area: input;
  cursor: pointer;
}

.fds-switch-readonly > .fds-switch-input,
.fds-switch-readonly > .fds-switch-label {
  cursor: default;
}

.fds-switch-disabled > .fds-switch-input,
.fds-switch-disabled > .fds-switch-label,
.fds-switch-disabled > .fds-switch-description {
  color: var(--fds-semantic-border-neutral-subtle);
}

.fds-switch-disabled > .fds-switch-input,
.fds-switch-disabled > .fds-switch-label {
  cursor: not-allowed;
}

.fds-switch-icon > .fds-switch-track {
  transition: color var(--fds-transition) ease;
  color: var(--fds-semantic-surface-neutral-dark);
}

.fds-switch-icon > .fds-switch-thumb {
  transition: transform var(--fds-transition) ease;
  color: var(--fds-semantic-background-default);
}

.fds-switch-icon > .fds-switch-thumb > .fds-switch-checkmark {
  opacity: 0;
  transition: opacity var(--fds-transition) ease-in-out;
  transform: translate(6px, 6px);
}

.fds-switch-input:disabled ~ .fds-switch-icon > .fds-switch-track {
  color: var(--fds-semantic-border-neutral-subtle);
}

.fds-switch-input:not([readonly], :disabled):checked ~ .fds-switch-icon > .fds-switch-track,
.fds-switch-input:not([readonly], :disabled):checked ~ .fds-switch-icon > .fds-switch-thumb > .fds-switch-checkmark {
  opacity: 1;
  color: var(--fds-semantic-surface-success-default);
}

.fds-switch-input:checked ~ .fds-switch-icon > .fds-switch-thumb {
  transform: translateX(22px);
}

@media (hover: hover) and (pointer: fine) {
  .fds-switch-input:not([readonly], :disabled):hover ~ .fds-switch-icon > .fds-switch-thumb {
    transform: translateX(4px);
  }

  .fds-switch-input:not([readonly], :disabled):hover ~ .fds-switch-label {
    color: var(--fds-semantic-border-input-hover);
  }

  .fds-switch-input:not(:disabled, [readonly]):checked:hover ~ .fds-switch-icon > .fds-switch-thumb {
    transform: translateX(17px);
  }

  .fds-switch-input:not(:checked, :disabled, [readonly]):hover ~ .fds-switch-icon > .fds-switch-track {
    color: var(--fds-semantic-surface-neutral-dark-hover);
  }

  .fds-switch-input:not(:disabled, [readonly]):checked:hover ~ .fds-switch-icon > .fds-switch-track,
  .fds-switch-input:not(:disabled, [readonly]):checked:hover ~ .fds-switch-icon > .fds-switch-thumb > .fds-switch-checkmark {
    color: var(--fds-semantic-surface-success-hover);
  }
}

.fds-switch-readonly .fds-switch-input[readonly] ~ .fds-switch-icon > .fds-switch-track {
  stroke: var(--fds-semantic-border-neutral-subtle);
  color: var(--fds-semantic-background-subtle);
}

.fds-switch-readonly .fds-switch-input[readonly]:checked ~ .fds-switch-icon .fds-switch-thumb > .fds-switch-checkmark {
  opacity: 1;
  color: var(--fds-semantic-background-subtle);
}

.fds-switch-readonly .fds-switch-input[readonly] ~ .fds-switch-icon .fds-switch-thumb {
  color: var(--fds-semantic-border-neutral-default);
}

.fds-switch-input:focus-visible:not(:disabled) ~ .fds-switch-icon {
  outline: var(--fds-focus-border-width) solid var(--fds-outer-focus-border-color);
  outline-offset: 0;
}

.fds-switch-input:focus-visible:not(:disabled) ~ .fds-switch-icon .fds-switch-track {
  stroke: var(--fds-inner-focus-border-color);
  stroke-width: var(--fds-focus-border-width);
}

.fds-switch-padlock {
  grid-area: label;
  height: 1.2rem;
  width: 1.2rem;
}
