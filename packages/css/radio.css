@layer ds.radio {
  .fds-radio {
    --dsc-radio-size: var(--ds-spacing-5);
    --dsc-radio-focus-border-width: 3px;
    --dsc-radio-background: var(--ds-color-neutral-background-default);
    --dsc-radio-border-color: var(--ds-color-neutral-border-default);
    --dsc-radio-border__hover--size: calc(var(--ds-spacing-3) / 2);
    --dsc-radio-border__hover: 0 0 0 var(--dsc-radio-border__hover--size) var(--ds-color-accent-surface-hover);

    display: grid;
  }

  .fds-radio:has(.fds-radio__label) {
    grid-template-columns: var(--dsc-radio-size) auto;
    gap: var(--ds-spacing-2);
  }

  /* Radio */
  .fds-radio__input {
    position: relative;
    width: var(--dsc-radio-size);
    height: var(--dsc-radio-size);
    z-index: 1;
    appearance: none;
    outline: none;
    cursor: pointer;
    margin: 0;
    align-self: center;
    box-shadow: inset 0 0 0 2px var(--dsc-radio-border-color);
    background: var(--dsc-radio-background);
    border-radius: 50%;
  }

  .fds-radio__input::before {
    position: absolute;
    content: '';
    display: block;
    width: 2.75rem;
    height: 2.75rem;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    cursor: pointer;
    border-radius: var(--ds-border-radius-md);
  }

  .fds-radio__label {
    min-height: var(--ds-sizing-10);
    min-width: min-content;
    display: inline-flex;
    flex-direction: row;
    gap: var(--ds-spacing-1);
    align-items: center;
    cursor: pointer;
  }

  .fds-radio__description {
    margin-top: calc(var(--ds-spacing-3) * -1);
    color: var(--ds-color-neutral-text-subtle);
    grid-column: 2;
  }

  .fds-radio--readonly > .fds-radio__input,
  .fds-radio--readonly > .fds-radio__label,
  .fds-radio--readonly > .fds-radio__input::before {
    cursor: default;
  }

  .fds-radio:has(.fds-radio__input:disabled) > .fds-radio__description {
    opacity: var(--ds-disabled-opacity);
  }

  .fds-radio__input:disabled,
  .fds-radio__input:disabled::before,
  .fds-radio:has(.fds-radio__input:disabled) > .fds-radio__label {
    cursor: not-allowed;
    opacity: var(--fds-opacity-disabled);
  }

  .fds-radio__input:focus-visible {
    outline-offset: var(--ds-spacing-1);
    outline: var(--dsc-radio-focus-border-width) solid var(--ds-focus-outer);
    box-shadow:
      inset 0 0 0 2px var(--dsc-radio-border-color),
      inset 0 0 0 var(--dsc-radio-focus-border-width) var(--ds-focus-inner),
      inset 0 0 0 6px var(--dsc-radio-background);
  }

  .fds-radio__input:checked {
    --dsc-radio-border-color: var(--ds-color-accent-base-default);

    background: var(--dsc-radio-border-color);
  }

  .fds-radio--readonly > .fds-radio__input {
    --dsc-radio-border-color: var(--ds-color-neutral-border-subtle);
    --dsc-radio-background: var(--ds-color-neutral-background-subtle);
  }

  .fds-radio__input:checked:not(:focus-visible) {
    box-shadow:
      inset 0 0 0 2px var(--dsc-radio-border-color),
      inset 0 0 0 6px var(--dsc-radio-background);
  }

  .fds-radio--readonly > .fds-radio__input:checked {
    background: var(--ds-color-neutral-border-strong);
  }

  .fds-radio--error > .fds-radio__input:not(:disabled, :focus-visible) {
    --dsc-radio-border-color: var(--ds-color-danger-border-default);
  }

  /* Only use hover for non-touch devices to prevent sticky-hovering
    "input:not(:read-only)" does not work so using ".container:not(.readonly) >" instead */
  @media (hover: hover) and (pointer: fine) {
    .fds-radio:not(.fds-radio--readonly) > .fds-radio__label:hover:not(:disabled),
    .fds-radio:not(.fds-radio--readonly) > .fds-radio__input:hover:not(:disabled) + .fds-radio__label {
      color: var(--ds-color-accent-text-subtle);
    }

    .fds-radio:not(.fds-radio--readonly) > .fds-radio__input:hover:not(:checked, :disabled) {
      --dsc-radio-border-color: var(--ds-color-accent-border-strong);

      box-shadow:
        var(--dsc-radio-border__hover),
        inset 0 0 0 2px var(--dsc-radio-border-color);
    }

    .fds-radio:not(.fds-radio--readonly) > .fds-radio__input:hover:checked:not(:disabled) {
      box-shadow:
        var(--dsc-radio-border__hover),
        inset 0 0 0 2px var(--dsc-radio-border-color),
        inset 0 0 0 6px var(--dsc-radio-background);
    }
  }

  /** Sizing */

  .fds-radio--sm {
    --dsc-radio-size: var(--ds-sizing-5);

    min-height: var(--ds-sizing-10);
  }

  .fds-radio--md {
    --dsc-radio-size: var(--ds-sizing-6);
    --dsc-radio-border__hover--size: var(--ds-spacing-1);

    min-height: var(--ds-sizing-11);
  }

  .fds-radio--lg {
    --dsc-radio-size: var(--ds-sizing-7);

    min-height: var(--ds-sizing-12);
  }

  .fds-radio-group--horizontal {
    display: flex;
    flex-direction: row;
    gap: var(--ds-spacing-6);
  }
}
